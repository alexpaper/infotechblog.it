{"version":3,"sources":["Component/enter.svg","Component/Info.svg","Component/home.svg","Component/login.svg","Component/plus.svg","Component/edit.svg","Component/trash.svg","styles/styles.js","Context/Reducer.js","Context/UsersReducer.js","Context/GlobalUsersMessage.js","Context/GlobalState.js","Component/Nav.js","Component/Header.js","Component/Modal.js","Component/Loader.js","Component/PostCard.js","Component/Bodyposts.js","Component/Wrapper.js","Component/Signup.js","Component/Login.js","App.js","index.js"],"names":["module","exports","styles","info","isPink","width","backgroundColor","color","backgroundAttachment","backgroundSize","backgroundRepeat","isDark","state","action","type","loading","fetchError","next","payload","pagination","prev","posts","msg","user","role","_id","fname","lname","email","username","createdAt","GlobalUsersContext","createContext","GlobalUsersProvider","children","flashMessage","message","dispatch","setTimeout","whoIsLogged","a","axios","get","then","response","data","success","catch","error","useReducer","UsersReducer","React","useEffect","Provider","value","clearUserSession","GlobalContext","GlobalProvider","useState","setDark","contextUsers","useContext","initialState","fetchData","useCallback","page","limit","limitNumb","url","request","searchKey","post","search","console","log","id","updatePost","update","Reducer","localStorage","getItem","JSON","parse","document","body","setAttribute","removeAttribute","deletePost","deletePostDB","postUpdate","updatePostDB","addPost","createNewPostDB","searchPosts","searchPostsDB","darkMode","setItem","stringify","Nav","props","numb","setNumb","open","openDrawer","openModalSignUp","openModalLogin","openModalLogout","status","push","className","onClick","randomNum","Math","floor","random","src","alt","href","undefined","memo","withStyles","openModalFunc","setOpen","searchInput","setSearch","isDarkLocal","setIsDarkLocal","context","headerToHide","useRef","prevScrollpos","window","pageYOffset","addEventListener","currentScrollPos","current","style","opacity","display","ref","checked","onChange","htmlFor","Info","Home","onSubmit","e","preventDefault","autoComplete","name","target","placeholder","Enter","Plus","Login","length","Modal","openModal","title","setTitle","text","setText","priority","setPriority","newPost","importance","required","editor","InlineEditor","onInit","event","getData","config","ckfinder","uploadUrl","Loader","PostCard","showDeleteBtn","setShowDeleteBtn","edit","setEdit","dataUpdate","setDataUpdate","key","Date","toLocaleDateString","day","month","year","hour","minute","disabled","confirm","alert","toggleDeleteDiv","Trash","Edit","submitUpdate","map","item","scrollTo","top","behavior","rel","classes","resError","openSignUp","setFname","setLname","setEmail","psw","setPsw","setConfirm","setRole","secret","setSecret","setFetchError","errRes","password","join","signUpDB","pswConfirm","openLogin","setUsername","setPassword","loginDB","App","setOpenModal","setOpenSignUp","setOpenLogin","openModalWindow","ReactDOM","render","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mOCsB5BC,EAtBA,SAAAC,GAAI,MAAK,CACpBC,OAAQ,CACJC,MAAO,OACPC,gBAAiB,UACjBC,MAAM,UACNC,qBAAsB,QACtBC,eAAgB,QAChBC,iBAAkB,aAGtBC,OAAQ,CACJN,MAAO,OACPC,gBAAiB,OACjBC,MAAM,OACNC,qBAAsB,QACtBC,eAAgB,QAChBC,iBAAkB,e,uBCfX,WAACE,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,gBACD,MAAO,CACHC,SAAS,EACTC,WAAY,GACZC,KAAMJ,EAAOK,QAAQC,WAAWF,KAChCG,KAAMP,EAAOK,QAAQC,WAAWC,KAChCC,MAAOR,EAAOK,QAAQG,OAE9B,IAAK,uBACD,MAAO,CACHN,SAAS,EACTC,WAAY,GACZK,MAAOR,EAAOK,QAAQG,OAE9B,IAAK,cACD,MAAO,CACHN,SAAS,EACTC,WAAY,qBACZK,MAAO,IAEf,IAAK,eACD,MAAO,CACHN,SAAS,EACTC,WAAY,wBAiBpB,QACI,OAAOJ,I,uBC3CJ,WAACA,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,cACD,OAAO,eACAF,EADP,CAEIU,IAAKT,EAAOK,UAGpB,IAAK,gBACD,OAAO,eACAN,EADP,CAEIU,IAAK,KAGb,IAAK,qBACD,OAAO,eACAV,EADP,CAEIW,KAAMV,EAAOK,UAErB,IAAK,mBACD,OAAO,eACAN,EADP,CAEIW,KAAM,CACFC,KAAM,OACNC,IAAK,EACLC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,MAIvB,QACI,OAAOlB,IC3BNmB,EAAqBC,0BAGrBC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAG9BC,EAAe,SAACC,GACpBC,EAAS,CACPvB,KAAM,cACNI,QAASkB,IAEXE,YAAW,WACTD,EAAS,CACPvB,KAAM,gBACNI,QAAS,OAEV,MAb8C,SAkBpCqB,IAlBoC,2EAkBnD,sBAAAC,EAAA,4DACY,gBADZ,SAEQC,IACHC,IAFO,iBAGPC,MAAK,SAAAC,IAE0B,IAA1BA,EAASC,KAAKC,SAChBT,EAAS,CACPvB,KAAM,qBACNI,QAAS0B,EAASC,KAAKtB,UAI5BwB,OAAM,SAAAC,GAELX,EAAS,CACPvB,KAAM,mBACNI,QAAS,CACPM,KAAM,OACNC,IAAK,EACLC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,SAxBrB,4CAlBmD,sBA0DnD,IA1DmD,EA2EzBmB,qBAAWC,EAjBlB,CACjB5B,IAAK,GACLC,KAAM,CACJC,KAAM,OACNC,IAAK,EACLC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,MAnEoC,mBA2E5ClB,EA3E4C,KA2ErCyB,EA3EqC,KAqFnD,OARAc,IAAMC,WAAU,WAEdjB,EAAa,YAEbI,MACC,IAID,kBAACR,EAAmBsB,SAApB,CACEC,MAAO,CACL1C,QACAuB,eACAI,cACAgB,iBA1CN,WACElB,EAAS,CACPvB,KAAM,mBACNI,QAAS,QA0CRgB,IChGMsB,EAAgBxB,0BAGhByB,EAAiB,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,EAEpBiB,IAAMO,UAAS,GAFK,mBAEvC/C,EAFuC,KAE/BgD,EAF+B,KAIxCC,EAAeT,IAAMU,WAAW9B,GAiBlC+B,EAAe,CACjB/C,SAAS,EACTC,WAAY,GACZC,KAAM,GACNG,KAAM,GACNC,MAAO,GACPV,UAIEoD,EAAYZ,IAAMa,YAAN,uCAAkB,WAAOC,EAAMC,GAAb,iBAAA1B,EAAA,6DAI5B2B,EAAYD,GAAS,EAIrBE,EAR4B,uBAGjBH,GAAQ,EAHS,kBAQYE,GARZ,SAU1B1B,IACHC,IAAI0B,GACJzB,MAAK,SAAAC,GAEJP,EAAS,CAAEvB,KAAM,gBAAiBI,QAAS0B,EAASC,UAErDE,OAAM,SAAAC,GACDA,EAAMJ,SAORgB,EAAazB,aAAaa,EAAMJ,SAASC,KAAKT,SAErCY,EAAMqB,QAWjBhC,EAAS,CAAEvB,KAAM,mBArCW,2CAAlB,wDAwChB,CAAC8C,IAvE6C,4CA0E9C,WAA6BU,GAA7B,SAAA9B,EAAA,4DAEY,cAFZ,SAGQC,IACH8B,KAFO,cAEG,CAAEC,OAAQF,IACpB3B,MAAK,SAAAC,GAEJP,EAAS,CACPvB,KAAM,uBACNI,QAAS0B,EAASC,UAIrBE,OAAM,SAAAC,GACLyB,QAAQC,IAAI1B,GACZX,EAAS,CAAEvB,KAAM,mBAfvB,4CA1E8C,kEA8F9C,WAA+ByD,GAA/B,SAAA/B,EAAA,4DACY,YADZ,SAEQC,IACH8B,KAFO,YAEGA,GACV5B,MAAK,SAAAC,GAEJmB,IACAH,EAAazB,aAAaS,EAASC,KAAKT,YAEzCW,OAAM,SAAAC,GACDA,EAAMJ,UAORmB,IACAH,EAAazB,aAAaa,EAAMJ,SAASC,KAAKT,UAErCY,EAAMqB,WApBvB,4CA9F8C,kEAiI9C,WAA4BM,EAAIC,GAAhC,eAAApC,EAAA,4DACY,cACNqC,EAAS,CAAEF,GAAIA,EAAIC,WAAYA,GAFrC,SAGQnC,IACH8B,KAHO,cAGGM,GACVlC,MAAK,SAAAC,GAEJmB,IACAH,EAAazB,aAAaS,EAASC,KAAKT,YAEzCW,OAAM,SAAAC,GACDA,EAAMJ,UAOR6B,QAAQC,IAAI,aACZX,IACAH,EAAazB,aAAaa,EAAMJ,SAASC,KAAKT,UACrCY,EAAMqB,WArBvB,4CAjI8C,kEAoK9C,WAA4BM,GAA5B,eAAAnC,EAAA,6DACM4B,EADN,sBAC2BO,GAD3B,SAEQlC,IACH8B,KAAKH,GACLzB,MAAK,SAAAC,GAEJmB,IACAH,EAAazB,aAAaS,EAASC,KAAKT,YAEzCW,OAAM,SAAAC,GACDA,EAAMJ,UAORmB,IACAH,EAAazB,aAAaa,EAAMJ,SAASC,KAAKT,UACrCY,EAAMqB,WAnBvB,4CApK8C,4BAuMpBpB,qBAAW6B,EAAShB,GAvMA,mBAuMvClD,EAvMuC,KAuMhCyB,EAvMgC,KAyM9Cc,IAAMC,WAAU,WAEdW,KAnM2BgB,aAAaC,QAAQ,UAAYC,KAAKC,MAAMH,aAAaC,QAAQ,WAAa,CAACrE,QAAQ,IAC9FA,QACtBwE,SAASC,KAAKC,aAAa,aAAc,QACzC1B,GAAQ,KAERwB,SAASC,KAAKE,gBAAgB,cAC9B3B,GAAQ,MAgML,CAACI,IA2CJ,OACE,kBAACP,EAAcH,SAAf,CACEC,MAAO,CACL1C,MAAOA,EACP2E,WA5CN,SAAoBZ,IAjN0B,oCAoN5Ca,CAAab,IA0CTC,WAvCN,SAAoBD,EAAIc,IAvNsB,sCA2N5CC,CAAaf,EAAIc,IAoCbE,QAjCN,SAAiBpB,IA9N6B,oCAiO5CqB,CAAgBrB,IA+BZsB,YA5BN,SAAqBvB,IApOyB,oCAsO5CwB,CAAcxB,IA2BVP,YACApD,SACAoF,SAvBW,WACXpF,GAKFgD,GAAShD,GACTwE,SAASC,KAAKE,gBAAgB,cAC9BP,aAAaiB,QAAQ,SAAUf,KAAKgB,UAAU,CAACtF,QAAO,OANtDgD,GAAShD,GACTwE,SAASC,KAAKC,aAAa,aAAc,QACzCN,aAAaiB,QAAQ,SAAUf,KAAKgB,UAAU,CAACtF,QAAO,SAsBrDuB,EAAU,MC9QF,SAASgE,EAAIC,GAAO,MAGPhD,IAAMO,SAAS,IAHR,mBAGxB0C,EAHwB,KAGlBC,EAHkB,KAKvBC,EAAsDH,EAAtDG,KAAMC,EAAgDJ,EAAhDI,WAAYC,EAAoCL,EAApCK,gBAAiBC,EAAmBN,EAAnBM,eAGrC7C,EAAeT,IAAMU,WAAW9B,GAYhC2E,EAAe,uCAAG,sBAAAlE,EAAA,sDACV,eACVC,IACKC,IAFK,gBAGLC,MAAK,SAAAC,GAGsB,MAApBA,EAAS+D,SAET/C,EAAaL,mBACbK,EAAazB,aAAb,oCAGPY,OAAM,SAAAC,GACH,GAAIA,EAAMJ,SAAU,CAGhB6B,QAAQC,IAAI1B,EAAMJ,SAASC,MAEZ,GACR+D,KAAK5D,EAAMJ,SAASC,WAIpBG,EAAMqB,WAxBL,2CAAH,qDAuCrB,OACI,6BACI,0CAEA,yBAAKwC,UAAYP,EAAD,gCACZ,yBAAKO,UAAU,oBACX,yBACIC,QApDK,WAErB,IAAIC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAChCb,EAAQU,IAkDQI,IAAG,8CAAyCf,EAAzC,QACHgB,IAAI,mBACJP,UAAU,sBAGlB,wBAAIA,UAAU,cACV,wBAAIA,UAAU,cACV,uBAAGQ,KAAK,KAAR,WAG6B,IAAhCzD,EAAahD,MAAMW,KAAKE,UAA+C6F,IAAlC1D,EAAahD,MAAMW,KAAKG,MAEtD,wBAAImF,UAAU,cACV,0BAAMC,QAAS,WAAQP,IAAcG,MAArC,aAKJ,oCACI,wBAAIG,UAAU,cACV,0BAAMC,QAAS,WAAQP,IAAcC,MAArC,aAEJ,wBAAIK,UAAU,cACV,0BAAMC,QAAS,WAAQP,IAAcE,MAArC,eAQxB,yBACIK,QAASP,EACTM,UAAYP,EAAoB,oBAAb,WACnBa,IAAI,yBACJC,IAAI,c,yFC8DLjE,UAAMoE,KAAKC,YAAWtH,EAAXsH,EA1J1B,SAAgBrB,GAAQ,IACdsB,EAAmDtB,EAAnDsB,cAAejB,EAAoCL,EAApCK,gBAAiBC,EAAmBN,EAAnBM,eADnB,EAGGtD,IAAMO,UAAS,GAHlB,mBAGd4C,EAHc,KAGRoB,EAHQ,OAIYvE,IAAMO,SAAS,IAJ3B,mBAIdiE,EAJc,KAIDC,EAJC,OAKiBzE,IAAMO,UAAS,GALhC,mBAKdmE,EALc,KAKDC,EALC,KAQfC,EAAU5E,IAAMU,WAAWL,GAC3BI,EAAeT,IAAMU,WAAW9B,GAE9B8D,EAAgBkC,EAAhBlC,YAeR1C,IAAMC,WAAU,WACX2E,EAAQpH,QACTmH,GAAe,KAEjB,CAACC,IAIH,IAAIC,EAAe7E,IAAM8E,SAGrBC,EAAgBC,OAAOC,YA8B3B,OA5BAD,OAAOE,iBAAiB,UAAU,WAEhC,IAAIC,EAAmBH,OAAOC,YAC1BF,EAAgBI,GAElBN,EAAaO,QAAQC,MAAMC,QAAU,EACrCnG,YAAW,WACT0F,EAAaO,QAAQC,MAAME,QAAU,UACpC,QAGHV,EAAaO,QAAQC,MAAMC,QAAU,EACrCnG,YAAW,WACT0F,EAAaO,QAAQC,MAAME,QAAU,SACpC,OAILR,EAAgBI,KAWhB,oCAEE,kBAACpC,EAAD,CACEI,KAAMA,EACNC,WA3Da,WACjBmB,GAASpB,IA2DLE,gBAAiBA,EACjBC,eAAgBA,IAGlB,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,UAEb,4BAAQ8B,IAAKX,EACXnB,UAAYP,EAAuB,+BAAhB,eAEnB,yBAAKO,UAAU,iBACb,yBAAKA,UAAU,UACb,2BACElC,GAAG,WACH7D,KAAK,WACL8H,QAASf,EACTgB,SA5BO,WACrBf,GAAgBD,GAChBE,EAAQhC,YA2BMc,UAAU,gBAEZ,2BAAOiC,QAAQ,WAAWjC,UAAU,iBAEtC,yBAAKA,UAAU,kBACb,yBAAKM,IAAK4B,IAAMlC,UAAU,WAAWO,IAAI,SACzC,wBAAIP,UAAYP,EAAsB,wBAAf,cAAvB,wBAMN,yBAAKO,UAAU,eACb,yBAAKA,UAAU,aACb,uBAAGQ,KAAK,KACN,yBAAKF,IAAK6B,IAAMnC,UAAU,WAAWO,IAAI,WAG7C,0BACAP,UAAU,cACToC,SA7FY,SAAAC,GAErBA,EAAEC,iBAEFtD,EAAY8B,GACZC,EAAU,KAyFDwB,aAAa,OAEZ,2BACEtI,KAAK,OACLuI,KAAK,SACLxC,UAAU,eACVlC,GAAG,eACHrB,MAAOqE,EACPkB,SAAU,SAAAK,GAAC,OAAItB,EAAUsB,EAAEI,OAAOhG,QAClCiG,YAAY,WAGd,4BACEzI,KAAK,SACL6D,GAAG,gBACHkC,UAAU,iBAEV,yBAAKA,UAAU,YAAYM,IAAKqC,IAAOpC,IAAI,aAIjD,yBAAKP,UAAU,iBAAiD,IAAhCjD,EAAahD,MAAMW,KAAKE,UAA+C6F,IAAlC1D,EAAahD,MAAMW,KAAKG,MAEtF,0BAAMoF,QAASW,EAAeZ,UAAU,eAAerF,KAAK,OAAM,yBAAKqF,UAAU,aAAcM,IAAKsC,IAAMrC,IAAI,WAG7G,yBAAKP,UAAU,aAAaC,QAAS,kBAAIL,KAAkBU,IAAKuC,IAAOtC,IAAI,WAGjF,yBAAKP,UAAU,iBACX,6BAAsC,IAAhCjD,EAAahD,MAAMW,KAAKE,UAA+C6F,IAAlC1D,EAAahD,MAAMW,KAAKG,MAA7D,eACIkC,EAAahD,MAAMW,KAAKG,OAEhC,sDAGR,yBAAKmF,UAA6C,IAAlCjD,EAAahD,MAAMU,IAAIqI,OAAe,WAAa,gBAAkD,oBAA1B/F,EAAahD,MAAMU,IAAqBsC,EAAahD,MAAMU,IAAM,W,gCC3JvJ,SAASsI,EAAMzD,GAC5B,IAAM4B,EAAU5E,IAAMU,WAAWL,GAGzBqG,EAA6B1D,EAA7B0D,UAAWpC,EAAkBtB,EAAlBsB,cAJgB,EAMTtE,IAAMO,SAAS,IANN,mBAM5BoG,EAN4B,KAMrBC,EANqB,OAOX5G,IAAMO,SAAS,IAPJ,mBAO5BsG,EAP4B,KAOtBC,EAPsB,OAQH9G,IAAMO,SAAS,OARZ,mBAQ5BwG,EAR4B,KAQlBC,EARkB,KAiCnC,OACE,oCACE,yBACEtD,UACGgD,EAEG,2CADA,qBAIN,yBAAKhD,UAAU,yBACb,4BAAQC,QAAS,kBAAMW,KAAiBZ,UAAU,oBAAlD,KAIA,6BACE,0BAAMoC,SArCC,SAAAC,GAEfA,EAAEC,iBAEF,IAAIiB,EAAU,CAEZN,MAAOA,EACPE,KAAMA,EACNK,WAAYH,GAIdnC,EAAQpC,QAAQyE,GAEhBL,EAAS,IACTE,EAAQ,IACRE,EAAY,OAEZ1C,KAmBkCZ,UAAU,mBAClC,6BACE,2BAAOiC,QAAQ,SAAf,SACA,2BACEhI,KAAK,OACLuI,KAAK,QACL/F,MAAOwG,EACPjB,SAAU,SAAAK,GAAC,OAAIa,EAASb,EAAEI,OAAOhG,QACjCuD,UAAU,yBACV0C,YAAY,QACZe,UAAQ,KAGZ,6BACE,2BAAOxB,QAAQ,IAAf,aAEA,kBAAC,IAAD,CACEyB,OAAQC,IACR3H,KAAK,GACL4H,OAAQ,SAAAF,KAIRD,UAAQ,EACRzB,SAAU,SAAC6B,EAAOH,GAChB,IAAM1H,EAAO0H,EAAOI,UAGpBV,EAAQpH,IASV+H,OAAQ,CAWNC,SAAU,CACRC,UAAU,gBAkDlB,yBAAKjE,UAAU,qBACb,2BAAOiC,QAAQ,qBAAf,cACA,4BACEO,KAAK,aACL/F,MAAO4G,EACPI,UAAQ,EACRzB,SAAU,SAAAK,GAAC,OAAIiB,EAAYjB,EAAEI,OAAOhG,QACpCuD,UAAU,qBAEV,4BAAQvD,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,UAGJ,yBAAKuD,UAAU,qBACb,4BAAQ/F,KAAK,SAAS+F,UAAU,yBAAhC,gBCvKD,SAASkE,IACpB,OACI,yBAAKlE,UAAU,gB,sCCMR,SAASmE,EAAS7E,GAE/B,IAAM4B,EAAU5E,IAAMU,WAAWL,GAC3BI,EAAeT,IAAMU,WAAW9B,GAE9B4C,EAAiDwB,EAAjDxB,GAAImF,EAA6C3D,EAA7C2D,MAAOO,EAAsClE,EAAtCkE,WAAYvI,EAA0BqE,EAA1BrE,UAAWkI,EAAe7D,EAAf6D,KAAMzI,EAAS4E,EAAT5E,KALV,EAOI4B,IAAMO,UAAS,GAPnB,mBAO/BuH,EAP+B,KAOhBC,EAPgB,OAQd/H,IAAMO,UAAS,GARD,mBAQ/ByH,EAR+B,KAQzBC,EARyB,OASFjI,IAAMO,WATJ,mBAS/B2H,EAT+B,KASnBC,EATmB,KAYtCnI,IAAMC,WAAU,cAEb,IA2BH,OACE,6BACE,yBAAKmI,IAAK5G,EAAIkC,UAAU,WACtB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAAf,IAAmCiD,EAAnC,KACA,yBAAKjD,UAAU,mBAAkB,oCAAjC,eAAmDtF,EAAKG,MAAxD,YAAiEH,EAAKI,OAAtE,KACA,yBAAKkF,UAA0B,QAAfwD,EAAuB,2BAA4C,SAAfA,EAAwB,4BAA6C,WAAfA,EAA0B,+BAAiC,MACnL,0CADF,IACsBA,GAEtB,yBAAKxD,UAAU,kBACb,qCAEC,IAAI2E,KAAK1J,GAAW2J,mBAAmB,QAAS,CAC/CC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,aAIZ,kBAAC,IAAD,CACEvB,OAAQC,IACR3H,KAAMmH,EACN+B,UAAUZ,EACVV,OAAQ,SAAAF,KAIR1B,SAAU,SAAC6B,EAAOH,GAChB,IAAM1H,EAAO0H,EAAOI,UAEpBW,EAAczI,IAEhB+H,OAAQ,CAENC,SAAU,CACRC,UAAU,eAUL,cAAVhB,EAAwB,GACvB,yBAAKjD,UAAU,kBACZoE,EACC,yBAAKpE,UAAS,mCAA8BlC,IAC1C,4BACEmC,QAAS,kBAAMiB,EAAQxC,WAAR,UAAsBZ,KACrCkC,UAAU,mBAFZ,YAQA,yBAAKA,UAAU,eAEZjD,EAAahD,MAAMW,KAAKK,QAAUL,EAAKK,OAA0C,UAAjCgC,EAAahD,MAAMW,KAAKC,KACvE,4BACEsF,QAAS,kBAvFP,SAAAnC,GAEtB,IADcwD,OAAO6D,QAAQ,iBAG3B,OAAOC,MAAM,aAEff,GAAkBD,GAiFiBiB,CAAgB,GAAD,OAAIvH,KAClCkC,UAAS,8BAAyBlC,IAFpC,IAGE,yBAAKkC,UAAU,YAAYM,IAAKgF,IAAO/E,IAAI,WAE7C,MAKPxD,EAAahD,MAAMW,KAAKK,QAAUL,EAAKK,OAA0C,UAAjCgC,EAAahD,MAAMW,KAAKC,KACvE,yBAAKqF,UAAU,aACb,4BAAQC,QAAS,iBAAiB,GAAD,OAAInC,QAvFnDyG,GAASD,IAwFOtE,UAAU,YACX,yBAAKA,UAAU,WAAWM,IAAKiF,IAAMhF,IAAI,UAEzC+D,EACC,4BACErE,QAAS,kBAzFR,SAACnC,EAAI0G,GAIxBtD,EAAQnD,WAAWD,EAAI0G,GACvBD,GAASD,GAoFwBkB,CAAa,GAAD,OAAI1H,GAAM,CAAE0G,gBACvCxE,UAAU,mBAFZ,UAOE,IAIN,SC9CD1D,UAAMoE,MArFrB,WAGE,IAAMQ,EAAU5E,IAAMU,WAAWL,GAI7BX,EAAOkF,EAAQnH,MAAMS,MAAMiL,KAAI,SAAAC,GAAI,OAErC,kBAAEvB,EAAF,CACEO,IAAKgB,EAAK9K,IACVkD,GAAI4H,EAAK9K,IACTF,KAAMgL,EAAKhL,KACXuI,MAAOyC,EAAKzC,MACZO,WAAYkC,EAAKlC,WACjBvI,UAAWyK,EAAKzK,UAChBkI,KAAMuC,EAAKvC,UA6Bf,OACE,oCACE,6BAASnD,UAAU,SACjB,yBAAKA,UAAU,uBACZkB,EAAQnH,MAAMI,WAAa+G,EAAQnH,MAAMI,WAAa,KACtD+G,EAAQnH,MAAMG,QAAU,kBAACgK,EAAD,MAAalI,EACtC,yBAAKgE,UAAU,mBACb,yBAAKA,UAAU,kBACWS,IAAvBS,EAAQnH,MAAMQ,MACb,4BAAQ0F,QAAS,kBArBP7C,EAqB4B8D,EAAQnH,MAAMQ,KAAK6C,KArBzCC,EAqB+C6D,EAAQnH,MAAMQ,KAAK8C,MAnB9FiE,OAAOqE,SAAS,CACdC,IAAK,EACLC,SAAU,gBAGZ3E,EAAQhE,UAAUE,EAAMC,GAPH,IAACD,EAAMC,GAqB0E2C,UAAU,YAApG,aAKJ,yBAAKA,UAAU,kBACWS,IAAvBS,EAAQnH,MAAMK,MACb,4BAAQ6F,QAAS,kBAvCP7C,EAuC4B8D,EAAQnH,MAAMK,KAAKgD,KAvCzCC,EAuC+C6D,EAAQnH,MAAMK,KAAKiD,MArC9FiE,OAAOqE,SAAS,CACdC,IAAK,EACLC,SAAU,gBAGZ3E,EAAQhE,UAAUE,EAAMC,GAPH,IAACD,EAAMC,GAuC0E2C,UAAU,YAApG,YAYV,yBAAKA,UAAU,kBAAf,YAGJ,uBAAGA,UAAU,oBAAb,YAHI,MAIJ,uBAAGA,UAAU,qBAAqByC,OAAO,SAASqD,IAAI,sBAAsBtF,KAAK,qCAAjF,cACC,uBAAGR,UAAU,8BAA8B8F,IAAI,sBAAsBtF,KAAK,2BAA2BiC,OAAO,UAA5G,yBCrEY9B,kBAAWtH,EAAXsH,EAbf,SAAiBrB,GAEf,IAAM4B,EAAU5E,IAAMU,WAAWL,GAGzBoJ,EAAYzG,EAAZyG,QACR,OACE,yBAAK/F,UAAWkB,EAAQpH,OAASiM,EAAQjM,OAASiM,EAAQxM,QACvD+F,EAAMjE,a,MCkOEiB,UAAMoE,MAxOrB,SAAgBpB,GACd,IA4FI0G,EA5FEjJ,EAAeT,IAAMU,WAAW9B,GAG9B+K,EAAgC3G,EAAhC2G,WAAYtG,EAAoBL,EAApBK,gBAJC,EAMKrD,IAAMO,SAAS,IANpB,mBAMdhC,EANc,KAMPqL,EANO,OAOK5J,IAAMO,SAAS,IAPpB,mBAOd/B,EAPc,KAOPqL,EAPO,OAQK7J,IAAMO,SAAS,IARpB,mBAQd9B,EARc,KAQPqL,EARO,OASC9J,IAAMO,SAAS,IAThB,mBASdwJ,EATc,KASTC,EATS,OAUShK,IAAMO,SAAS,IAVxB,mBAUdsI,EAVc,KAULoB,EAVK,OAWGjK,IAAMO,SAAS,QAXlB,mBAWdlC,EAXc,KAWR6L,EAXQ,OAYOlK,IAAMO,SAAS,IAZtB,mBAYd4J,EAZc,KAYNC,EAZM,OAeepK,IAAMO,SAAS,CACjDZ,SAAS,EACTD,KAAM,CAAC,MAjBY,mBAed7B,EAfc,KAeFwM,EAfE,iDAoBrB,WAAwBjM,GAAxB,SAAAiB,EAAA,4DACY,iBADZ,SAGQC,IACH8B,KAHO,iBAGGhD,GACVoB,MAAK,SAAAC,GAEJ4D,IAEA5C,EAAazB,aAAb,gCAEAqL,EAAc,CAAE1K,SAAS,EAAMD,KAAM,CAAC,MAEtCe,EAAarB,iBAGdQ,OAAM,SAAAC,GACL,GAAIA,EAAMJ,SAAU,CAIlB,IAAM6K,EAASzK,EAAMJ,SAASC,KAC9B2K,EAAcC,QAILzK,EAAMqB,WA1BvB,4CApBqB,sBA4GrB,YAbwBiD,IAApBtG,EAAW6B,OACbgK,EAAW7L,EAAW6B,KAAKyJ,KAAI,SAAAC,GAE7B,YAAmBjF,IAAfiF,EAAK7K,MAA8B6K,EAAK7K,WACzB4F,IAAfiF,EAAK5K,MAA8B4K,EAAK5K,WACzB2F,IAAfiF,EAAK3K,MAA8B2K,EAAK3K,WACtB0F,IAAlBiF,EAAKmB,SAAiCnB,EAAKmB,cAC7BpG,IAAdiF,EAAK/K,KAA6B+K,EAAK/K,UACvB8F,IAAhBiF,EAAKe,OAA8Bf,EAAKe,YAA5C,MAMF,oCACE,yBACEzG,UACGiG,EAEG,2CADA,qBAIN,yBAAKjG,UAAU,gCACb,4BAAQC,QAAS,kBAAMN,KAAmBK,UAAU,oBAApD,KAIA,yBAAKA,UAAU,oBACW,IAAvB7F,EAAW8B,QACV,yBAAK+D,UAAU,YAAf,IAA4BgG,EAASc,KAAK,kBAA1C,KAIA,MAIJ,0BAAMvE,aAAa,MAAMH,SAvEhB,SAAAC,GAEfA,EAAEC,iBAEFqE,EAAc,CAAE1K,SAAS,EAAMD,KAAM,CAAC,MAjEnB,oCAgFnB+K,CAbW,CAETlM,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACP8L,SAAUR,EACVW,WAAY7B,EACZxK,OACA8L,WAOFP,EAAS,IACTC,EAAS,IACTC,EAAS,IACTE,EAAO,IACPC,EAAW,IACXG,EAAU,KA6CyC1G,UAAU,mBACrD,6BACE,2BAAOiC,QAAQ,UACf,2BACEhI,KAAK,OACLuI,KAAK,QACL/F,MAAO5B,EACPmH,SAAU,SAAAK,GAAC,OAAI6D,EAAS7D,EAAEI,OAAOhG,QACjCuD,UAAU,yBACV0C,YAAY,gBAIhB,6BACE,2BAAOT,QAAQ,UACf,2BACEhI,KAAK,OACLuI,KAAK,QACL/F,MAAO3B,EACPkH,SAAU,SAAAK,GAAC,OAAI8D,EAAS9D,EAAEI,OAAOhG,QACjCuD,UAAU,yBACV0C,YAAY,eAIhB,6BACE,2BAAOT,QAAQ,UACf,2BACEhI,KAAK,QACLuI,KAAK,QACL/F,MAAO1B,EACPiH,SAAU,SAAAK,GAAC,OAAI+D,EAAS/D,EAAEI,OAAOhG,QACjCuD,UAAU,yBACV0C,YAAY,WAIhB,6BACE,2BAAOT,QAAQ,QACf,2BACEhI,KAAK,WACLuI,KAAK,MACL/F,MAAO4J,EACPrE,SAAU,SAAAK,GAAC,OAAIiE,EAAOjE,EAAEI,OAAOhG,QAC/BuD,UAAU,yBACV0C,YAAY,cAIhB,6BACE,2BAAOT,QAAQ,QACf,2BACEhI,KAAK,WACLuI,KAAK,UACL/F,MAAO0I,EACPnD,SAAU,SAAAK,GAAC,OAAIkE,EAAWlE,EAAEI,OAAOhG,QACnCuD,UAAU,yBACV0C,YAAY,aAIhB,6BACE,2BAAOT,QAAQ,WACf,2BACEhI,KAAK,WACLuI,KAAK,SACL/F,MAAOgK,EACPzE,SAAU,SAAAK,GAAC,OAAIqE,EAAUrE,EAAEI,OAAOhG,QAClCuD,UAAU,yBACV0C,YAAY,YAIhB,yBAAK1C,UAAU,qBACb,2BAAOiC,QAAQ,qBAAf,QACA,4BACEO,KAAK,aACL/F,MAAO9B,EACPqH,SAAU,SAAAK,GAAC,OAAImE,EAAQnE,EAAEI,OAAOhG,QAChCuD,UAAU,qBAEV,4BAAQvD,MAAM,QAAd,QACA,4BAAQA,MAAM,aAAd,eAKJ,yBAAKuD,UAAU,qBACb,4BAAQ/F,KAAK,SAAS+F,UAAU,yBAAhC,kB,MC7DC1D,UAAMoE,MAhKrB,SAAepB,GACb,IAAMvC,EAAeT,IAAMU,WAAW9B,GAG9B+L,EAA8B3H,EAA9B2H,UAAWrH,EAAmBN,EAAnBM,eAJC,EAMMtD,IAAMO,SAAS,IANrB,mBAMb9B,EANa,KAMNqL,EANM,OAOE9J,IAAMO,SAAS,IAPjB,mBAObwJ,EAPa,KAORC,EAPQ,OAWYhK,IAAMO,SAAS,CAC7CtB,QAAS,gBAZS,mBAWbP,EAXa,KAWHkM,EAXG,OAcY5K,IAAMO,SAAS,CAC7CtB,QAAS,KAfS,mBAcbsL,EAda,KAcHM,EAdG,iDAoBpB,WAAuBzM,GAAvB,SAAAiB,EAAA,4DACY,cADZ,SAGQC,IACH8B,KAHO,cAGGhD,GACVoB,MAAK,SAAAC,GAGJmL,EAAY,CAAE3L,QAAS,KACvB4L,EAAY,CAAE5L,QAAS,KAEvBqE,IAEA7C,EAAarB,cAEZqB,EAAazB,aAAb,kCAEFY,OAAM,SAAAC,GACDA,EAAMJ,UAKsB,MAA1BI,EAAMJ,SAAS+D,QACjBoH,EAAY,CAAE3L,QAASY,EAAMJ,SAASC,KAAKT,UAEf,MAA1BY,EAAMJ,SAAS+D,QACjBoH,EAAY,CAAE3L,QAASY,EAAMJ,SAASC,KAAKT,WAGpCY,EAAMqB,WA9BvB,4CApBoB,sBAyFpB,OACE,oCACE,yBACEwC,UACGiH,EAEG,2CADA,qBAIN,yBAAKjH,UAAU,+BACb,4BAAQC,QAAS,kBAAML,KAAkBI,UAAU,oBAAnD,KAIA,yBAAKA,UAAU,kBAEXhF,EAASO,QACP,oCACE,yBAAKyE,UAAU,YAAf,IAA4BhF,EAASO,QAArC,MAIF,KAGFsL,EAAStL,QACP,oCACE,yBAAKyE,UAAU,YAAf,KAA6B6G,EAAStL,QAAtC,MAIF,MAGN,0BAAM6G,SAzDG,SAAAC,GAEfA,EAAEC,iBAEF4E,EAAY,CAAE3L,QAAS,KACvB4L,EAAY,CAAE5L,QAAS,KAvEL,oCAgFlB6L,CAPW,CAETrM,MAAOA,EACP8L,SAAUR,IAMZD,EAAS,IACTE,EAAO,KAwCyBtG,UAAU,mBAClC,6BACE,2BAAOiC,QAAQ,UACf,2BACEhI,KAAK,QACLuI,KAAK,QACL/F,MAAO1B,EACPiH,SAAU,SAAAK,GAAC,OAAI+D,EAAS/D,EAAEI,OAAOhG,QACjCuD,UAAU,yBACV0C,YAAY,WAIhB,6BACE,2BAAOT,QAAQ,QACf,2BACEhI,KAAK,WACLuI,KAAK,MACL/F,MAAO4J,EACPrE,SAAU,SAAAK,GAAC,OAAIiE,EAAOjE,EAAEI,OAAOhG,QAC/BuD,UAAU,yBACV0C,YAAY,cAIhB,yBAAK1C,UAAU,qBACb,4BAAQ/F,KAAK,SAAS+F,UAAU,yBAAhC,kBCrGCqH,MAzCf,WAAe,MAEqB/K,IAAMO,UAAS,GAFpC,mBAENmG,EAFM,KAEKsE,EAFL,OAGuBhL,IAAMO,UAAS,GAHtC,mBAGNoJ,EAHM,KAGMsB,EAHN,OAIqBjL,IAAMO,UAAS,GAJpC,mBAINoK,EAJM,KAIKO,EAJL,KAOPC,EAAkB,WACtBH,GAActE,IAIVrD,EAAkB,WACtB4H,GAAetB,IAGXrG,EAAiB,WACrB4H,GAAcP,IAIhB,OAGE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKjH,UAAU,OACb,kBAAC,EAAD,CAAQY,cAAe6G,EAAiB9H,gBAAiBA,EAAiBC,eAAgBA,IAC1F,kBAACmD,EAAD,CAAOC,UAAWA,EAAWpC,cAAe6G,IAC5C,kBAAC,EAAD,CAAQxB,WAAYA,EAAYtG,gBAAiBA,IACjD,kBAAC,EAAD,CAAOsH,UAAWA,EAAWrH,eAAgBA,IAC7C,kBAAC,EAAD,WCxCZ8H,IAASC,OAAO,kBAAC,EAAD,MAASrJ,SAASsJ,eAAe,W","file":"static/js/main.409d4ca2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/enter.296c0d75.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.864b35d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.c2ba9373.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.a9155314.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.61eac528.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.8d337f65.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.77546780.svg\";","const styles = info => ({\n    isPink: {\n        width: \"100%\",\n        backgroundColor: \"#f2F2f2\",\n        color:'#040404',\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n\n    },\n    isDark: {\n        width: \"100%\",\n        backgroundColor: \"#000\",\n        color:'#fff',\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    }\n\n\n});\n\nexport default styles;","// REDUCER SPECIFY STATE CHANGEs AND ACTIONS\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_SUCCESS':\r\n            return {\r\n                loading: false,\r\n                fetchError: '',\r\n                next: action.payload.pagination.next,\r\n                prev: action.payload.pagination.prev,\r\n                posts: action.payload.posts\r\n            }\r\n        case 'FETCH_SEARCH_SUCCESS':\r\n            return {\r\n                loading: false,\r\n                fetchError: '',\r\n                posts: action.payload.posts\r\n            }\r\n        case 'FETCH_ERROR':\r\n            return {\r\n                loading: false,\r\n                fetchError: 'Wrong, login first',\r\n                posts: []\r\n            }\r\n        case 'UPDATE_ERROR':\r\n            return {\r\n                loading: false,\r\n                fetchError: 'Something went wrong'\r\n            };\r\n\r\n\r\n        // case 'DELETE_POST':\r\n        //     return {\r\n        //         ...state,\r\n        //         posts: state.posts.filter(post => post._id !== action.payload)\r\n        //     }\r\n\r\n        // case 'ADD_POST':\r\n        //     return {\r\n        //         ...state,\r\n        //         posts: [action.payload, ...state.posts]\r\n        //     }\r\n\r\n        // IF THE ACTION IS EMPY RETURN THE DEFAULT STATE\r\n        default:\r\n            return state;\r\n    }\r\n}","// REDUCER SPECIFY STATE CHANGEs AND ACTIONS\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_MESSAGE':\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n\r\n        case 'CLEAR_MESSAGE':\r\n            return {\r\n                ...state,\r\n                msg: ''\r\n            }\r\n\r\n        case 'FETCH_USER_SUCCESS':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'FETCH_USER_ERROR':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    role: 'user',\r\n                    _id: 0,\r\n                    fname: '',\r\n                    lname: '',\r\n                    email: '',\r\n                    username: '',\r\n                    createdAt: ''\r\n                }\r\n            }\r\n        // IF THE ACTION IS EMPY RETURN THE DEFAULT STATE\r\n        default:\r\n            return state;\r\n    }\r\n}","// https://www.youtube.com/watch?v=imjfiXxvMD8\r\n// https://www.youtube.com/watch?v=snzS7-73SEQ\r\nimport React, { createContext, useReducer } from \"react\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport axios from 'axios';\r\n\r\n//******************** CREATE GLOBAL STATE USING createContext */\r\n// pass in the initial state.\r\nexport const GlobalUsersContext = createContext();\r\n// To use the global state inside the component\r\n// you need to create a PROVIDER and wrap all CHILDREN COMPONENT!\r\nexport const GlobalUsersProvider = ({ children }) => {\r\n\r\n  //*** FLASH MESSAGE LOGIC, SET AND CLEAR AFTER n SECONDS\r\n  const flashMessage = (message) => {\r\n    dispatch({\r\n      type: \"NEW_MESSAGE\",\r\n      payload: message\r\n    });\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"CLEAR_MESSAGE\",\r\n        payload: ''\r\n      });\r\n    }, 8000)\r\n\r\n  };\r\n\r\n  //*** FETCH LOGGED IN USER AND STORE IN THE GLOBAL CONTEXT */\r\n  async function whoIsLogged() {\r\n    let url = '/user/whoisin';\r\n    await axios\r\n      .get(url)\r\n      .then(response => {\r\n         // console.log(response);\r\n        if (response.data.success === true) {\r\n          dispatch({\r\n            type: 'FETCH_USER_SUCCESS',\r\n            payload: response.data.user\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // console.log(error);\r\n        dispatch({\r\n          type: 'FETCH_USER_ERROR',\r\n          payload: {\r\n            role: 'user',\r\n            _id: 0,\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            username: '',\r\n            createdAt: ''\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  //**** CLEAR USER INFO\r\n  function clearUserSession() {\r\n    dispatch({\r\n      type: 'FETCH_USER_ERROR',\r\n      payload: {}\r\n    });\r\n  };\r\n\r\n  //******************* SET INITIAL STATE GLOBAL OBJECT VARIABLE */\r\n  //**** THIS IS THE INITIAL STATE AFTHER DISPACH BECOME THE useReducer 'STATE' */\r\n  let initialState = {\r\n    msg: '',\r\n    user: {\r\n      role: 'user',\r\n      _id: 0,\r\n      fname: '',\r\n      lname: '',\r\n      email: '',\r\n      username: '',\r\n      createdAt: ''\r\n    }\r\n\r\n  };\r\n\r\n\r\n  //*** You need to create the Reducer\r\n  //*** THE LOGIC IS LIKE JAVASCRIPT REDUCE ACCUMULATOR!!!!!!!!\r\n  const [state, dispatch] = useReducer(UsersReducer, initialState);\r\n  // USEEFFECT TO FETCH THE DATA\r\n  React.useEffect(() => {\r\n    // FETCH POSTS ONE TIME\r\n    flashMessage(\"Wellcome\");\r\n    // FETCH USE LOGGED IN INFO\r\n    whoIsLogged();\r\n  }, []);\r\n\r\n  // ******** RETURN\r\n  return (\r\n    <GlobalUsersContext.Provider\r\n      value={{\r\n        state, // PASS ALL THE STATE, THAT IS THE INITIAL STATE MODIFIED.\r\n        flashMessage,\r\n        whoIsLogged,\r\n        clearUserSession\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalUsersContext.Provider>\r\n  );\r\n};\r\n","\r\nimport React, { createContext, useReducer } from \"react\";\r\nimport Reducer from \"./Reducer\";\r\nimport axios from \"axios\";\r\n// IMPORT GLOBAL MESSAGE STATE\r\nimport { GlobalUsersContext } from \"../Context/GlobalUsersMessage\";\r\n\r\n//******************** CREATE GLOBAL STATE USING createContext */\r\n// pass in the initial state.\r\nexport const GlobalContext = createContext();\r\n// To use the global state inside the component\r\n// you need to create a PROVIDER and wrap all CHILDREN COMPONENT!\r\nexport const GlobalProvider = ({ children }) => {\r\n  // SET STATE\r\n  const [isDark, setDark] = React.useState(false);\r\n  // IMPPORT GLOBAL USERS MESSAGE SISTEM\r\n  const contextUsers = React.useContext(GlobalUsersContext);\r\n\r\n  // CHECK DARK THEME INITIAL STATE\r\nconst darkInitialState = ()=>{\r\n  const darkModeLocalStorage = localStorage.getItem('isDark') ? JSON.parse(localStorage.getItem('isDark')) : {isDark: false};\r\nif(darkModeLocalStorage.isDark){\r\n  document.body.setAttribute('data-theme', 'dark');\r\n  setDark(true);\r\n}else{\r\n  document.body.removeAttribute('data-theme');\r\n  setDark(false);\r\n}\r\n}\r\n\r\n\r\n  //******************* SET INITIAL STATE GLOBAL OBJECT VARIABLE */\r\n  //**** THIS IS THE INITIAL STATE AFTHER DISPACH BECOME THE useReducer 'STATE' */\r\n  let initialState = {\r\n    loading: true,\r\n    fetchError: \"\",\r\n    next: {},\r\n    prev: {},\r\n    posts: [],\r\n    isDark\r\n  };\r\n\r\n// FETCH DATA USE CALLBACK TO AVOID ERRORS\r\nconst fetchData = React.useCallback(async (page, limit) =>{\r\n \r\n    // let cl = console.log;\r\n    let pageNumb = page || 1;\r\n    let limitNumb = limit || 4;\r\n    // cl(pageNumb)\r\n    // cl(limitNumb)\r\n  \r\n    let url = `/v1/api?page=${pageNumb}&limit=${limitNumb}`;\r\n    // cl(url)\r\n    await axios\r\n      .get(url)\r\n      .then(response => {\r\n        // console.log(response);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: response.data });\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          // console.log(error.response.data);\r\n          // console.log(error.response.status);\r\n          // console.log(error.response.headers);\r\n          // console.log(error.config);\r\n          contextUsers.flashMessage(error.response.data.message);\r\n  \r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n  \r\n        // return console.log(error.response.data);\r\n        dispatch({ type: \"FETCH_ERROR\" });\r\n  \r\n      });\r\n},[contextUsers]);\r\n\r\n  //**************** AXIOS SEARCH POSTS POST  */\r\n  async function searchPostsDB(searchKey) {\r\n\r\n    let url = \"/searchinfo\";\r\n    await axios\r\n      .post(url, { search: searchKey })\r\n      .then(response => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: \"FETCH_SEARCH_SUCCESS\",\r\n          payload: response.data\r\n        });\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch({ type: \"FETCH_ERROR\" });\r\n      });\r\n  }\r\n\r\n  //************************* AXIOS CREATE NEW POST */\r\n  async function createNewPostDB(post) {\r\n    let url = \"/infopost\";\r\n    await axios\r\n      .post(url, post)\r\n      .then(response => {\r\n        // console.log(response);\r\n        fetchData();\r\n        contextUsers.flashMessage(response.data.message)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          // console.log(error.response.data);\r\n          // console.log(error.response.status);\r\n          // console.log(error.response.headers);\r\n          // console.log(error.config);\r\n          fetchData();\r\n          contextUsers.flashMessage(error.response.data.message);\r\n\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n\r\n        // return console.log(error.response.data);\r\n\r\n      });\r\n  }\r\n  //*********************** AXIOS UPDATE POST */\r\n  async function updatePostDB(id, updatePost) {\r\n    let url = \"/updatepost\";\r\n    let update = { id: id, updatePost: updatePost };\r\n    await axios\r\n      .post(url, update)\r\n      .then(response => {\r\n        // console.log(response);\r\n        fetchData();\r\n        contextUsers.flashMessage(response.data.message)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          // console.log(error.response.data);\r\n          // console.log(error.response.status);\r\n          // console.log(error.response.headers);\r\n          // console.log(error.config);\r\n          console.log('no update')\r\n          fetchData();\r\n          contextUsers.flashMessage(error.response.data.message);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n        // return console.log(error.response.data);\r\n      });\r\n  }\r\n\r\n  //************************ AXIOS POST DELETE POST */\r\n  async function deletePostDB(id) {\r\n    let url = `/deletepost/${id}`;\r\n    await axios\r\n      .post(url)\r\n      .then(response => {\r\n        // console.log(response);\r\n        fetchData();\r\n        contextUsers.flashMessage(response.data.message)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          // console.log(error.response.data);\r\n          // console.log(error.response.status);\r\n          // console.log(error.response.headers);\r\n          // console.log(error.config);\r\n          fetchData();\r\n          contextUsers.flashMessage(error.response.data.message)\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n        // return console.log(error.response.data);\r\n\r\n      });\r\n  }\r\n\r\n  //*** You need to create the Reducer\r\n  //*** THE LOGIC IS LIKE JAVASCRIPT REDUCE ACCUMULATOR!!!!!!!!\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  // USEEFFECT TO FETCH THE DATA\r\n  React.useEffect(() => {\r\n    // FETCH POSTS ONE TIME\r\n    fetchData()\r\n    // Check darkmode initial state\r\n    darkInitialState()\r\n  }, [fetchData]);\r\n\r\n  //********** DELETE ACTIONS TO MAKE CALLs TO THE REDUCER */\r\n  function deletePost(id) {\r\n    //console.log(id);\r\n    // Detele post\r\n    deletePostDB(id);\r\n  }\r\n  // Update post\r\n  function updatePost(id, postUpdate) {\r\n    // console.log(id);\r\n    // console.log(postUpdate);\r\n    // Update DB\r\n    updatePostDB(id, postUpdate);\r\n  }\r\n  //*** CREATE POST ACTION  */\r\n  function addPost(post) {\r\n    // console.log(post);\r\n    // Axios create new post in the DB\r\n    createNewPostDB(post);\r\n  }\r\n  //*** SEARCH CONTEXT */\r\n  function searchPosts(searchKey) {\r\n    // console.log(searchKey);\r\n    searchPostsDB(searchKey);\r\n    // Fetch\r\n    // fetchData();\r\n  };\r\n\r\n  //*** */ Dark Mode\r\n  const darkMode = () => {\r\n    if(!isDark){\r\n      setDark(!isDark);\r\n      document.body.setAttribute('data-theme', 'dark');\r\n      localStorage.setItem('isDark', JSON.stringify({isDark:true}));\r\n    }else{\r\n      setDark(!isDark);\r\n      document.body.removeAttribute('data-theme');\r\n      localStorage.setItem('isDark', JSON.stringify({isDark:false}));\r\n    }\r\n  };\r\n\r\n  // ******** RETURN\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        state: state, // PASS ALL THE STATE, THAT IS THE INITIAL STATE MODIFIED.\r\n        deletePost,\r\n        updatePost,\r\n        addPost,\r\n        searchPosts,\r\n        fetchData,\r\n        isDark,\r\n        darkMode\r\n      }}\r\n    >\r\n      {children}{\" \"}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { GlobalUsersContext } from '../Context/GlobalUsersMessage';\r\n\r\nexport default function Nav(props) {\r\n\r\n    // STATE\r\n    const [numb, setNumb] = React.useState(17);\r\n\r\n    const { open, openDrawer, openModalSignUp, openModalLogin } = props;\r\n\r\n    // Global Context\r\n    const contextUsers = React.useContext(GlobalUsersContext);\r\n\r\n\r\n    //*** FUNCTIONS */\r\n\r\n    //*** Change profile img */\r\n    const changeProfileImg = () => {\r\n        //*** Random numbers generator */\r\n        let randomNum = Math.floor(Math.random() * 99);\r\n        setNumb(randomNum);\r\n    };\r\n    //*** LOG OUT */\r\n    const openModalLogout = async () => {\r\n        let url = \"/user/logout\";\r\n        axios\r\n            .get(url)\r\n            .then(response => {\r\n                // console.log(response);\r\n\r\n                if (response.status === 200) {\r\n                    // Flash message\r\n                    contextUsers.clearUserSession();\r\n                    contextUsers.flashMessage(`👌 Logout success.`)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.log(error.response.data);\r\n\r\n                    const errRes = [];\r\n                    errRes.push(error.response.data);\r\n                    //console.log(fetchError);\r\n                    // console.log(error.response.status);\r\n                    // console.log(error.response.headers);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                    // http.ClientRequest in node.js\r\n                    // console.log(error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    // console.log('Error', error.message);\r\n                }\r\n                // console.log(error.config);\r\n            })\r\n\r\n    }\r\n\r\n    //**** RETURN \r\n    return (\r\n        <div>\r\n            <h1>Navigation</h1>\r\n            {/* NAV  */}\r\n            <nav className={!open ? `info-nav` : `info-nav show-nav`}>\r\n                <div className=\"info-profile-div\">\r\n                    <img\r\n                        onClick={changeProfileImg}\r\n                        src={`https://randomuser.me/portraits/men/${numb}.jpg`}\r\n                        alt=\"info-img-profile\"\r\n                        className=\"info-img-profile\"\r\n                    />\r\n                </div>\r\n                <ul className=\"profile-ul\">\r\n                    <li className=\"profile-li\">\r\n                        <a href=\"/\"> Home </a>\r\n                    </li>\r\n\r\n                    {contextUsers.state.user._id !== 0 && contextUsers.state.user.fname !== undefined ?\r\n                        (\r\n                            <li className=\"profile-li\">\r\n                                <span onClick={() => { openDrawer(); openModalLogout() }}> LogOut </span>\r\n                            </li>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n                                <li className=\"profile-li\">\r\n                                    <span onClick={() => { openDrawer(); openModalSignUp() }} > SignUp </span>\r\n                                </li>\r\n                                <li className=\"profile-li\">\r\n                                    <span onClick={() => { openDrawer(); openModalLogin() }}> LogIn </span>\r\n                                </li>\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n                </ul>\r\n            </nav>\r\n            <img\r\n                onClick={openDrawer}\r\n                className={!open ? \"img-show\" : \"img-show show-btn\"}\r\n                src=\"img/hamburger-menu.svg\"\r\n                alt=\"img-show\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"../styles/styles\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nimport { GlobalUsersContext } from \"../Context/GlobalUsersMessage\";\r\nimport Nav from './Nav';\r\nimport Enter from './enter.svg';\r\nimport Info from './Info.svg';\r\nimport Home from './home.svg';\r\nimport Login from './login.svg';\r\nimport Plus from './plus.svg';\r\n\r\n\r\n//**** FUNCTION */\r\nfunction Header(props) {\r\n  const { openModalFunc, openModalSignUp, openModalLogin } = props;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [searchInput, setSearch] = React.useState(\"\");\r\n  const [isDarkLocal, setIsDarkLocal] = React.useState(false);\r\n\r\n  // Import CONTEXT\r\n  const context = React.useContext(GlobalContext);\r\n  const contextUsers = React.useContext(GlobalUsersContext);\r\n   // console.log(contextUsers)\r\n  const { searchPosts } = context;\r\n  // Function handleClick open Drawer\r\n  const openDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n  //*** ONSUBMIT ACTION */\r\n  const onSearchSubmit = e => {\r\n    // Prevent refresh\r\n    e.preventDefault();\r\n    // Search in the backend database\r\n    searchPosts(searchInput);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  // USE EFFECT\r\n  React.useEffect(()=>{\r\n    if(context.isDark){\r\n      setIsDarkLocal(true);\r\n    }\r\n  },[context])\r\n\r\n  //*** HIDE HEADER ON SCROLL  DOWN  */\r\n  // let lastScrollTop = 0;\r\n  let headerToHide = React.useRef();\r\n  // console.log(headerToHide.current)\r\n  // Add event listener\r\n  let prevScrollpos = window.pageYOffset;\r\n\r\n  window.addEventListener('scroll', function () {\r\n    // console.log(window.pageYOffset)\r\n    let currentScrollPos = window.pageYOffset;\r\n    if (prevScrollpos > currentScrollPos) {\r\n      // headerToHide.current.classList.remove('d-none')\r\n      headerToHide.current.style.opacity = 1;\r\n      setTimeout(() => {\r\n        headerToHide.current.style.display = 'block';\r\n      }, 1800)\r\n    } else {\r\n      // headerToHide.current.classList.add('d-none')\r\n      headerToHide.current.style.opacity = 0;\r\n      setTimeout(() => {\r\n        headerToHide.current.style.display = 'none';\r\n      }, 1800)\r\n\r\n    }\r\n    // console.log(prevScrollpos)\r\n    prevScrollpos = currentScrollPos;\r\n  });\r\n\r\n  //**** HANDLE DARK MODE\r\n  const handleDarkMode = ()=>{\r\n    setIsDarkLocal(!isDarkLocal);\r\n    context.darkMode()\r\n  };\r\n\r\n  //******************************************** RETURN */\r\n  return (\r\n    <>\r\n      {/* NAV  */}\r\n      <Nav\r\n        open={open}\r\n        openDrawer={openDrawer}\r\n        openModalSignUp={openModalSignUp}\r\n        openModalLogin={openModalLogin}\r\n      />\r\n      {/* STICKY  */}\r\n      <div className=\"content-stcky\">\r\n        <div className=\"sticky\">\r\n          {/* HEADER  */}\r\n          <header ref={headerToHide}\r\n            className={!open ? \"info-header\" : \"info-header back-white-color\"}\r\n          >\r\n            <div className=\"contentHeader\">\r\n              <div className=\"switch\">\r\n                <input\r\n                  id=\"switch-1\"\r\n                  type=\"checkbox\"\r\n                  checked={isDarkLocal}\r\n                  onChange={handleDarkMode}\r\n                  className=\"switchInput\"\r\n                />\r\n                <label htmlFor=\"switch-1\" className=\"switchLabel\"></label>\r\n              </div>\r\n              <div className=\"info-title-div\">\r\n                <img src={Info} className='info-img' alt=\"info\"/>\r\n                <h1 className={!open ? \"info-title\" : \"info-title dark-color\"}>\r\n                Info Tech Blog.it\r\n              </h1>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <div className=\"info-search\">\r\n            <div className=\"info-home\">\r\n              <a href=\"/\">\r\n                <img src={Home} className=\"btn-home\" alt=\"home\" />\r\n              </a>\r\n            </div>\r\n            <form \r\n            className=\"search-form\"\r\n             onSubmit={onSearchSubmit}\r\n             autoComplete='off'\r\n             >\r\n              <input\r\n                type=\"text\"\r\n                name=\"search\"\r\n                className=\"search-input\"\r\n                id=\"search-input\"\r\n                value={searchInput}\r\n                onChange={e => setSearch(e.target.value)}\r\n                placeholder=\"Search\"\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                id=\"search-submit\"\r\n                className=\"search-submit\"\r\n              >\r\n                <img className='btn-enter' src={Enter} alt=\"enter\"/>\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className='info-add-post'>{contextUsers.state.user._id !== 0 && contextUsers.state.user.fname !== undefined ?\r\n                  \r\n                 <span onClick={openModalFunc} className=\"info-btn-add\" role='img'><img className='info-login'  src={Plus} alt=\"enter\"/></span>\r\n                \r\n                  :\r\n                  <img className='info-login' onClick={()=>openModalLogin()} src={Login} alt=\"enter\"/>}\r\n            </div>\r\n         \r\n            <div className=\"info-subtitle\">\r\n                <div>{contextUsers.state.user._id !== 0 && contextUsers.state.user.fname !== undefined ?\r\n                  `Ciao ${contextUsers.state.user.fname}`\r\n                  :\r\n                  'Tech info. Errors are our friends! Stay informed!'}\r\n                  </div>\r\n              </div>\r\n          <div className={contextUsers.state.msg.length === 0 ? \"info-msg\" : \"info-msg bck\"}>{typeof contextUsers.state.msg != \"undefined\" ? contextUsers.state.msg : \"\"}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(withStyles(styles)(Header));\r\n","import React from \"react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport InlineEditor from \"@ckeditor/ckeditor5-build-inline\";\r\n// Global Context\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nexport default function Modal(props) {\r\n  const context = React.useContext(GlobalContext);\r\n  // const APIURL = \"http://localhost:3001\";\r\n  // Deconstruct\r\n  const { openModal, openModalFunc } = props;\r\n  // Set State\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [text, setText] = React.useState(\"\");\r\n  const [priority, setPriority] = React.useState(\"low\");\r\n\r\n  //*** ON SUBMIT FUNCTION */\r\n  const onSubmit = e => {\r\n    // Prevent default\r\n    e.preventDefault();\r\n    // Create an object\r\n    let newPost = {\r\n      // _id: Math.floor(Math.random() * 1000000000000000) + 'eed231',\r\n      title: title,\r\n      text: text,\r\n      importance: priority\r\n    };\r\n    // Run function context add new post\r\n    // console.log(newPost);\r\n    context.addPost(newPost);\r\n    // Clear form fields\r\n    setTitle(\"\");\r\n    setText(\"\");\r\n    setPriority(\"low\");\r\n    // Close modal windows\r\n    openModalFunc();\r\n  };\r\n\r\n  //************************ RETURN */\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          !openModal\r\n            ? \"info-modal-window\"\r\n            : \"info-modal-window info-modal-window-show\"\r\n        }\r\n      >\r\n        <div className=\"info-modal-windows-up\">\r\n          <button onClick={() => openModalFunc()} className=\"info-modal-close\">\r\n            X\r\n          </button>\r\n          {/* <div className=\"info-modal-title\">Add Info</div> */}\r\n          <div>\r\n            <form onSubmit={onSubmit} className=\"info-modal-form\">\r\n              <div>\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={e => setTitle(e.target.value)}\r\n                  className=\"info-modal-input-title\"\r\n                  placeholder=\"Title\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"\">Post Info</label>\r\n\r\n                <CKEditor\r\n                  editor={InlineEditor}\r\n                  data=\"\"\r\n                  onInit={editor => {\r\n                    // You can store the \"editor\" and use when it is needed.\r\n                    // console.log(\"Editor is ready to use!\", editor);\r\n                  }}\r\n                  required\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    // console.log({ event, editor, data });\r\n                    // Set state\r\n                    setText(data);\r\n\r\n                  }}\r\n                  // onBlur={(event, editor) => {\r\n\r\n                  // }}\r\n                  // onFocus={(event, editor) => {\r\n                  //   console.log(\"Focus.\", editor);\r\n                  // }}\r\n                  config={{\r\n                    // toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'fontColor',\r\n                    //   'fontSize'],\r\n                    // plugin: ['highlight'],\r\n                    // heading: {\r\n                    //   options: [\r\n                    //     { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\r\n                    //     { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\r\n                    //     { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }\r\n                    //   ]\r\n                    // },\r\n                    ckfinder: {\r\n                      uploadUrl: `/uploads`\r\n                    }\r\n                  }}\r\n                // {\r\n                //   removePlugins: [\"Heading\", \"Link\"]\r\n                // },\r\n                // {\r\n                //   toolbar: [\r\n                //     \"heading\",\r\n                //     \"|\",\r\n                //     \"bold\",\r\n                //     \"italic\",\r\n                //     \"link\",\r\n                //     \"bulletedList\",\r\n                //     \"numberedList\",\r\n                //     \"|\",\r\n                //     \"indent\",\r\n                //     \"outdent\",\r\n                //     \"|\",\r\n                //     \"imageUpload\",\r\n                //     \"blockQuote\",\r\n                //     \"insertTable\",\r\n                //     \"mediaEmbed\",\r\n                //     \"undo\",\r\n                //     \"redo\",\r\n                //     \"codeBlock\",\r\n                //     \"fontBackgroundColor\",\r\n                //     \"fontColor\",\r\n                //     \"fontSize\",\r\n                //     \"highlight\",\r\n                //     \"fontFamily\",\r\n                //     \"pageBreak\",\r\n                //     \"specialCharacters\",\r\n                //     \"todoList\"\r\n                //   ]\r\n                // }\r\n                />\r\n\r\n                {/* <textarea\r\n                  name=\"text\"\r\n                  id=\"\"\r\n                  cols=\"30\"\r\n                  rows=\"10\"\r\n                  value={text}\r\n                  onChange={e => setText(e.target.value)}\r\n                  className=\"editor\"\r\n                  required\r\n                ></textarea> */}\r\n              </div>\r\n\r\n              <div className=\"info-modal-select\">\r\n                <label htmlFor=\"select-importance\">Importance</label>\r\n                <select\r\n                  name=\"importance\"\r\n                  value={priority}\r\n                  required\r\n                  onChange={e => setPriority(e.target.value)}\r\n                  className=\"select-importance\"\r\n                >\r\n                  <option value=\"low\">Low</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"info-modal-submit\">\r\n                <button type=\"submit\" className=\"info-btn-modal-submit\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nexport default function Loader() {\r\n    return (\r\n        <div className='info-loader'>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport InlineEditor from \"@ckeditor/ckeditor5-build-inline\";\n//*********** IMPORT THE GLOBAL STATE */\nimport { GlobalContext } from \"../Context/GlobalState\";\nimport { GlobalUsersContext } from '../Context/GlobalUsersMessage';\nimport Edit from './edit.svg';\nimport Trash from './trash.svg';\n\nexport default function PostCard(props) {\n  //*********** CONTEXT */\n  const context = React.useContext(GlobalContext);\n  const contextUsers = React.useContext(GlobalUsersContext);\n  //********* Props deconstruction\n  const { id, title, importance, createdAt, text, user } = props;\n  //********* STATE */\n  const [showDeleteBtn, setShowDeleteBtn] = React.useState(false);\n  const [edit, setEdit] = React.useState(false);\n  const [dataUpdate, setDataUpdate] = React.useState();\n  // const APIURL = \"http://localhost:3001\";\n  // Useeffect\n  React.useEffect(() => {\n\n  }, []);\n  //**************************************** FUNCTIONS */\n  //************************** Delete function\n  const toggleDeleteDiv = id => {\n    let confirm = window.confirm(\"Are you sure?\");\n    if (!confirm) {\n      // If false\n      return alert(\"Be aware.\");\n    }\n    setShowDeleteBtn(!showDeleteBtn);\n\n  };\n  //**************** EDIT */\n  const toggleEdit = id => {\n    setEdit(!edit);\n  };\n\n  //********** UPDATE POST */\n  const submitUpdate = (id, dataUpdate) => {\n    // console.log(id);\n    // console.log(dataUpdate);\n    // Update DB\n    context.updatePost(id, dataUpdate);\n    setEdit(!edit);\n  };\n\n  // Return\n  return (\n    <div>\n      <div key={id} className=\"content\">\n        <div className=\"info-card\">\n          <div className=\"info-card-title\"> {title} </div>\n          <div className=\"info-card-owner\"><b>Owner</b>: {`${user.fname} ${user.lname}`} </div>\n          <div className={importance === 'low' ? 'info-card-importance low' : importance === 'high' ? 'info-card-importance high' : importance === 'medium' ? 'info-card-importance  medium' : null}>\n            <b>Relevance: </b> {importance}\n          </div>\n          <div className=\"info-card-time\">\n            <b>Date: </b>\n\n            {new Date(createdAt).toLocaleDateString(\"it-IT\", {\n              day: \"numeric\",\n              month: \"numeric\",\n              year: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\"\n            })}\n          </div>\n\n          <CKEditor\n            editor={InlineEditor}\n            data={text}\n            disabled={edit ? false : true}\n            onInit={editor => {\n              // You can store the \"editor\" and use when it is needed.\n              // console.log(\"Editor is ready!\", editor);\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              // console.log({ event, editor, data });\n              setDataUpdate(data);\n            }}\n            config={{\n\n              ckfinder: {\n                uploadUrl: `/uploads`\n              }\n            }}\n          // onBlur={(event, editor) => {\n          //   console.log(\"Blur.\", editor);\n          // }}\n          // onFocus={(event, editor) => {\n          //   console.log(\"Focus.\", editor);\n          // }}\n          />\n          {title === 'Not Found' ? '' : (\n            <div className='info-card-btns'>\n              {showDeleteBtn ? (\n                <div className={`confirm-del info-btn-del-${id}`}>\n                  <button\n                    onClick={() => context.deletePost(`${id}`)}\n                    className=\"btn-confirm-del\"\n                  >\n                    CONFIRM\n              </button>\n                </div>\n              ) : (\n                  <div className=\"confirm-del\">\n\n                    {contextUsers.state.user.email === user.email || contextUsers.state.user.role === 'admin' ?\n                      <button\n                        onClick={() => toggleDeleteDiv(`${id}`)}\n                        className={`btn-del btn-del-btn-${id}`}\n                      > <img className='img-trash' src={Trash} alt=\"trash\"/></button>\n                      :\n                      null\n                    }\n\n                  </div>\n                )}\n              {contextUsers.state.user.email === user.email || contextUsers.state.user.role === 'admin' ?\n                <div className=\"info-edit\">\n                  <button onClick={() => toggleEdit(`${id}`)}\n                    className=\"edit-btn\">\n                   <img className='img-edit' src={Edit} alt=\"edit\"/>\n            </button>\n                  {edit ? (\n                    <button\n                      onClick={() => submitUpdate(`${id}`, { dataUpdate })}\n                      className=\"edit-btn-update\"\n                    >\n                      Update\n                    </button>\n                  ) : (\n                      \"\"\n                    )}\n                </div>\n                :\n                null\n\n              }\n\n            </div>\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport Loader from './Loader';\r\n// import Editor from '../Editor/ckeditor';\r\n\r\n//*********** IMPORT THE GLOBAL STATE */\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nimport PostCard from \"./PostCard\";\r\n\r\n//**************** FUNCTIONAL COMPONENT */\r\nfunction Bodyposts() {\r\n  //***************** STATE */\r\n\r\n  const context = React.useContext(GlobalContext);\r\n\r\n  //********* CREATE OBJECT DATA TO RENDER\r\n  // console.log(context);\r\n  let data = context.state.posts.map(item => (\r\n\r\n    < PostCard\r\n      key={item._id}\r\n      id={item._id}\r\n      user={item.user}\r\n      title={item.title}\r\n      importance={item.importance}\r\n      createdAt={item.createdAt}\r\n      text={item.text}\r\n    />\r\n  ));\r\n\r\n  //************* PAGINATION FUNCTION */\r\n  // Next\r\n  const paginationNext = (page, limit) => {\r\n    // Scroll top\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    })\r\n    // Fetch data\r\n    context.fetchData(page, limit)\r\n  }\r\n\r\n  // Prev\r\n  const paginationPrev = (page, limit) => {\r\n    // Scroll top\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    })\r\n    // Fetch data\r\n    context.fetchData(page, limit)\r\n  }\r\n\r\n\r\n  //************************************************** RETURN */\r\n  return (\r\n    <>\r\n      <section className=\"sec-1\">\r\n        <div className=\"content alignCenter\">\r\n          {context.state.fetchError ? context.state.fetchError : null}\r\n          {context.state.loading ? <Loader /> : data}\r\n          <div className='info-navigation'>\r\n            <div className=\"info-prev\">\r\n              {context.state.prev !== undefined ?\r\n                <button onClick={() => paginationPrev(context.state.prev.page, context.state.prev.limit)} className='btn-prev'>Previous</button>\r\n                : false\r\n              }\r\n\r\n            </div>\r\n            <div className=\"info-next\">\r\n              {context.state.next !== undefined ?\r\n                <button onClick={() => paginationNext(context.state.next.page, context.state.next.limit)} className='btn-next'>Next</button>\r\n                :\r\n                false\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* follow me template */}\r\n\r\n      <div className=\"made-with-love\">\r\n\r\n        Made with\r\n  <i className='footer-icon-love'> ♥ </i> by\r\n  <a className='footer-anchor-love' target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:alessandro.carta@gmail.com\"> @lexPaper</a>\r\n   <a className='footer-anchor-sitowebveloce' rel=\"noopener noreferrer\" href=\"https://sitowebveloce.it\" target='_blank'>sitowebveloce.it</a>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Bodyposts);\r\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"../styles/styles\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nfunction Wrapper(props) {\n  // Global Context State\n  const context = React.useContext(GlobalContext);\n\n  // Take styles from the material ui props\n  const { classes } = props;\n  return (\n    <div className={context.isDark ? classes.isDark : classes.isPink}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Wrapper);\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport './Signup.css';\r\n\r\n// Global Context\r\nimport { GlobalUsersContext } from \"../Context/GlobalUsersMessage\";\r\n\r\nfunction Signup(props) {\r\n  const contextUsers = React.useContext(GlobalUsersContext);\r\n  // console.log(context)\r\n  // Deconstruct\r\n  const { openSignUp, openModalSignUp } = props;\r\n  // Set State\r\n  const [fname, setFname] = React.useState(\"\");\r\n  const [lname, setLname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [psw, setPsw] = React.useState(\"\");\r\n  const [confirm, setConfirm] = React.useState(\"\");\r\n  const [role, setRole] = React.useState(\"user\");\r\n  const [secret, setSecret] = React.useState('');\r\n\r\n  // FETCH ERROR\r\n  const [fetchError, setFetchError] = React.useState({\r\n    success: false,\r\n    data: [{}]\r\n  });\r\n  //\r\n  async function signUpDB(user) {\r\n    let url = \"/user/register\";\r\n\r\n    await axios\r\n      .post(url, user)\r\n      .then(response => {\r\n        // Close modal windows\r\n        openModalSignUp();\r\n        // Flash message\r\n        contextUsers.flashMessage(`👌 Signup success.`);\r\n        // setFetchSuccess(response.data);\r\n        setFetchError({ success: true, data: [{}] })\r\n        // Fetch user info\r\n        contextUsers.whoIsLogged();\r\n\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          // console.log(error.response.data);\r\n          const errRes = error.response.data;\r\n          setFetchError(errRes)\r\n          //console.log(fetchError);\r\n          // console.log(error.response.status);\r\n          // console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n        // console.log(error.config);\r\n      });\r\n  };\r\n\r\n\r\n  //*** ON SUBMIT FUNCTION */\r\n  const onSubmit = e => {\r\n    // Prevent default\r\n    e.preventDefault();\r\n    // RESET FETCH ERRORS A\r\n    setFetchError({ success: true, data: [{}] })\r\n    // Create an object\r\n    let data = {\r\n      // _id: Math.floor(Math.random() * 1000000000000000) + 'eed231',\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      password: psw,\r\n      pswConfirm: confirm,\r\n      role,\r\n      secret\r\n    };\r\n\r\n    // Run function context add new post\r\n    // console.log(data)\r\n    signUpDB(data);\r\n    // Clear form fields\r\n    setFname(\"\");\r\n    setLname(\"\");\r\n    setEmail(\"\");\r\n    setPsw(\"\");\r\n    setConfirm(\"\");\r\n    setSecret('');\r\n    // Close modal windows\r\n    // openModalSignUp();\r\n  }\r\n\r\n  //*** ERRORS */\r\n  let resError;\r\n  // console.log(fetchError)\r\n  if (fetchError.data !== undefined) {\r\n    resError = fetchError.data.map(item => {\r\n    // console.log(item)\r\n      if (item.fname !== undefined) { return item.fname }\r\n      if (item.lname !== undefined) { return item.lname }\r\n      if (item.email !== undefined) { return item.email }\r\n      if (item.password !== undefined) { return item.password }\r\n      if (item.role !== undefined) { return item.role }\r\n      if (item.secret !== undefined) {return item.secret}\r\n    });\r\n  }\r\n\r\n  //************************ RETURN */\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          !openSignUp\r\n            ? \"info-modal-window\"\r\n            : \"info-modal-window info-modal-window-show\"\r\n        }\r\n      >\r\n        <div className=\"info-modal-windows-up-signup\">\r\n          <button onClick={() => openModalSignUp()} className=\"info-modal-close\">\r\n            X\r\n          </button>\r\n          {/* <div className=\"info-modal-title\">Add Info</div> */}\r\n          <div className='signup-messages'>\r\n            {fetchError.success === false ? (\r\n              <div className='errorDiv'> {resError.join(' 🚸 ')} </div>\r\n\r\n            )\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n\r\n          <form autoComplete=\"off\" onSubmit={onSubmit} className=\"info-modal-form\">\r\n            <div>\r\n              <label htmlFor=\"fname\"></label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                value={fname}\r\n                onChange={e => setFname(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"First Name\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"lname\"></label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                value={lname}\r\n                onChange={e => setLname(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Last Name\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\"></label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Email\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"psw\"></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"psw\"\r\n                value={psw}\r\n                onChange={e => setPsw(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Password\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"psw\"></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirm\"\r\n                value={confirm}\r\n                onChange={e => setConfirm(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Confirm\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"secret\"></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"secret\"\r\n                value={secret}\r\n                onChange={e => setSecret(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Secret\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div className=\"info-modal-select\">\r\n              <label htmlFor=\"select-importance\">Role</label>\r\n              <select\r\n                name=\"importance\"\r\n                value={role}\r\n                onChange={e => setRole(e.target.value)}\r\n                className=\"select-importance\"\r\n              >\r\n                <option value=\"user\">User</option>\r\n                <option value=\"publisher\">Publisher</option>\r\n\r\n              </select>\r\n            </div>\r\n           \r\n            <div className=\"info-modal-submit\">\r\n              <button type=\"submit\" className=\"info-btn-modal-submit\">\r\n                Sumbit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default React.memo(Signup);","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport './Login.css';\r\n// Global Context\r\nimport { GlobalUsersContext } from \"../Context/GlobalUsersMessage\";\r\n\r\nfunction Login(props) {\r\n  const contextUsers = React.useContext(GlobalUsersContext);\r\n  // console.log(context)\r\n  // Deconstruct\r\n  const { openLogin, openModalLogin } = props;\r\n  // Set State\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [psw, setPsw] = React.useState(\"\");\r\n\r\n  // console.log(fetchSuccess.user)\r\n  // FETCH ERROR\r\n  const [username, setUsername] = React.useState({\r\n    message: 'Fill fields'\r\n  });\r\n  const [password, setPassword] = React.useState({\r\n    message: ''\r\n  });\r\n\r\n\r\n  //*** LOGIN \r\n  async function loginDB(user) {\r\n    let url = \"/user/login\";\r\n    // Fetch\r\n    await axios\r\n      .post(url, user)\r\n      .then(response => {\r\n       // console.log(response);\r\n        // Clear errors\r\n        setUsername({ message: '' });\r\n        setPassword({ message: '' });\r\n        // Close modal windows\r\n        openModalLogin();\r\n        // Fetch from context who is logged data\r\n        contextUsers.whoIsLogged()\r\n         // Flash message\r\n         contextUsers.flashMessage(`👌 Login success.`)\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n           // console.log(error.response.data.message);\r\n          // console.log(error.response.status);\r\n          if (error.response.status === 400) {\r\n            setUsername({ message: error.response.data.message });\r\n          }\r\n          if (error.response.status === 401) {\r\n            setUsername({ message: error.response.data.message });\r\n          }\r\n          // console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n          // http.ClientRequest in node.js\r\n          // console.log(error.request);\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          // console.log('Error', error.message);\r\n        }\r\n        // console.log(error.config);\r\n        // console.log(JSON.parse(error.config.data));\r\n\r\n      });\r\n  };\r\n\r\n  //*** ON SUBMIT FUNCTION */\r\n  const onSubmit = e => {\r\n    // Prevent default\r\n    e.preventDefault();\r\n    // Clear errors\r\n    setUsername({ message: '' })\r\n    setPassword({ message: '' })\r\n    // Create an object\r\n    let data = {\r\n      // _id: Math.floor(Math.random() * 1000000000000000) + 'eed231',\r\n      email: email,\r\n      password: psw\r\n    };\r\n    // Run function context add new post\r\n    // console.log(data)\r\n    loginDB(data);\r\n    // Clear form fields\r\n    setEmail(\"\");\r\n    setPsw(\"\");\r\n    // Close modal windows\r\n    // openModalLogin();\r\n  }\r\n\r\n  //************************ RETURN */\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          !openLogin\r\n            ? \"info-modal-window\"\r\n            : \"info-modal-window info-modal-window-show\"\r\n        }\r\n      >\r\n        <div className=\"info-modal-windows-up-login\">\r\n          <button onClick={() => openModalLogin()} className=\"info-modal-close\">\r\n            X\r\n          </button>\r\n\r\n          <div className='login-messages'>\r\n            {\r\n              username.message ? (\r\n                <>\r\n                  <div className='errorDiv'> {username.message} </div>\r\n                </>\r\n              )\r\n                :\r\n                null\r\n            }\r\n            {\r\n              password.message ? (\r\n                <>\r\n                  <div className='errorDiv'>  {password.message} </div>\r\n                </>\r\n              )\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n          <form onSubmit={onSubmit} className=\"info-modal-form\">\r\n            <div>\r\n              <label htmlFor=\"email\"></label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Email\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"psw\"></label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"psw\"\r\n                value={psw}\r\n                onChange={e => setPsw(e.target.value)}\r\n                className=\"info-modal-input-title\"\r\n                placeholder=\"Password\"\r\n              // required\r\n              />\r\n            </div>\r\n            <div className=\"info-modal-submit\">\r\n              <button type=\"submit\" className=\"info-btn-modal-submit\">\r\n                Submit\r\n                </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Login);","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Component/Header\";\nimport Modal from \"./Component/Modal\";\nimport Bodyposts from \"./Component/Bodyposts\";\nimport Wrapper from \"./Component/Wrapper\";\nimport Signup from './Component/Signup';\nimport Login from './Component/Login';\n\n//********************** GLOBAL STATE */\nimport { GlobalProvider } from \"./Context/GlobalState\";\nimport { GlobalUsersProvider } from './Context/GlobalUsersMessage';\n\nfunction App() {\n  // State\n  const [openModal, setOpenModal] = React.useState(false);\n  const [openSignUp, setOpenSignUp] = React.useState(false);\n  const [openLogin, setOpenLogin] = React.useState(false);\n\n  //*** Open Modal Post\n  const openModalWindow = () => {\n    setOpenModal(!openModal);\n  };\n\n  //*** Open Modal SignUp\n  const openModalSignUp = () => {\n    setOpenSignUp(!openSignUp);\n  };\n  //*** Open Modal Login\n  const openModalLogin = () => {\n    setOpenLogin(!openLogin);\n  };\n\n  //************************* RETURN */\n  return (\n    // WRAP EVERYTHING INSIDE THE GLOBAL PROVIDER TO USE GLOBAL STATE\n\n    <GlobalUsersProvider>\n      <GlobalProvider>\n        <Wrapper>\n          <div className=\"App\">\n            <Header openModalFunc={openModalWindow} openModalSignUp={openModalSignUp} openModalLogin={openModalLogin} />\n            <Modal openModal={openModal} openModalFunc={openModalWindow} />\n            <Signup openSignUp={openSignUp} openModalSignUp={openModalSignUp} />\n            <Login openLogin={openLogin} openModalLogin={openModalLogin} />\n            <Bodyposts />\n          </div>\n        </Wrapper>\n      </GlobalProvider>\n    </GlobalUsersProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}